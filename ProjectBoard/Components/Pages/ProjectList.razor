@page "/Projects"
@using ProjectBoard.Model
@using ProjectBoard.Components.SubComponents
@inject IDialogService DialogService

@inject Projects _projects

<PageTitle>Projects</PageTitle>

<MudButton Size="@Size.Small" OnClick="@CreateNewProject" Variant="@Variant.Filled" Color="@Color.Primary">New project</MudButton>

<MudDataGrid Items="@projectList" Filterable="false" SortMode="@SortMode.None" Groupable="false">
    <Columns>
        <PropertyColumn Property="x => x.Name" />
        <PropertyColumn Property="x => x.Customer" />
        <PropertyColumn Property="x => x.DueDate" Title="Due date" />
        <PropertyColumn Property="x => x.CreationDate" Title="Creation date" />
        <PropertyColumn Property="x => x.Priority" Title="Priotity" />
        <TemplateColumn CellClass="d-flex justify-end">
            <CellTemplate>
                <MudStack Row>
                    @* <MudRating Size="@Size.Small" SelectedValue="@context.Item.Rating" /> *@
                    <MudButton Size="@Size.Small" OnClick="@GoToDetail" Variant="@Variant.Filled" Color="@Color.Primary" href="@($"/ProjectOverview/{context.Item.Id}")">Detail</MudButton>
                </MudStack>
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code {

    private List<Project> projectList;
    private int currentCount = 0;

    protected override async Task OnInitializedAsync()
    {
        projectList = await _projects.GetAllProjects();
    }

    private async Task CreateNewProject()
    {
        var options = new DialogOptions { CloseOnEscapeKey = false,BackdropClick = false, CloseButton = true};

        var dialog = await DialogService.ShowAsync<CreateProject>("Create new project", options);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            projectList = await _projects.GetAllProjects();
        }
    }

    private async void GoToDetail()
    {
            
            projectList.Add(new Project
            {
                Name = "TEST"
            });

    }
}
